require("dotenv").config();
const express = require("express");
const axios = require("axios");

const app = express();
const PORT = process.env.PORT || 3000;

const SUCCESSFUL_RESULT_NAMES = process.env.SUCCESSFUL_RESULT_NAMES
  ? process.env.SUCCESSFUL_RESULT_NAMES.split(",")
  : ["–£—Å–ø–µ—Ö", "–ì–æ—Ä—è—á–∏–π", "–ì–æ—Ä—è—á–∞—è", "Hot"];

const TG_BOT_TOKEN = process.env.TG_BOT_TOKEN;
const TG_CHAT_ID = process.env.TG_CHAT_ID;

app.use(express.json());

app.get("/", (req, res) => {
  res.send("CallSuccess AI Processor is alive!");
});

// –ë–µ—Ä—ë–º –Ω–æ–≤—ã–π access_token
async function getAccessToken() {
  try {
    const response = await axios.post("https://api.skorozvon.ru/oauth/token", null, {
      params: {
        grant_type: "password",
        username: process.env.SKOROZVON_USERNAME,
        api_key: process.env.SKOROZVON_API_KEY,
        client_id: process.env.SKOROZVON_CLIENT_ID,
        client_secret: process.env.SKOROZVON_CLIENT_SECRET,
      },
    });

    return response.data.access_token;
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", err.response?.data || err.message);
    throw err;
  }
}

app.post("/webhook", async (req, res) => {
  console.log("=== –í–ï–ë–•–£–ö –ü–û–õ–£–ß–ï–ù ===");
  console.log("–í—Ä–µ–º—è:", new Date().toISOString());
  console.log("RAW –í–ï–ë–•–£–ö:", JSON.stringify(req.body, null, 2));

  try {
    const resultName = req.body?.call_result?.result_name;
    const callDuration = req.body?.call?.duration || 0;
    const callId = req.body?.call?.id;

    console.log("--- –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ ---");
    console.log("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:", resultName);
    console.log("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞:", callDuration, "—Å–µ–∫");
    console.log("ID –∑–≤–æ–Ω–∫–∞:", callId);

    const isSuccessfulCall =
      resultName &&
      SUCCESSFUL_RESULT_NAMES.some((name) =>
        resultName.toLowerCase().includes(name.toLowerCase())
      );

    if (isSuccessfulCall) {
      console.log("–û–ë–ù–ê–†–£–ñ–ï–ù –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –ö–õ–ò–ï–ù–¢!");

      const managerName = req.body?.call?.user?.name || "–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω";
      const organizationName = req.body?.lead?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è";
      const phone = req.body?.call?.phone || "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω";
      const comment = req.body?.call_result?.comment || "–Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è";

      // –∂–¥—ë–º —Ä–æ–≤–Ω–æ 2 –º–∏–Ω—É—Ç—ã
      console.log("–ñ–¥—É 2 –º–∏–Ω—É—Ç—ã, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å—å —É—Å–ø–µ–ª–∞ –ø–æ—è–≤–∏—Ç—å—Å—è...");
      await new Promise((resolve) => setTimeout(resolve, 120000));

      // 1Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å –≥–æ—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É –∏–∑ –≤–µ–±—Ö—É–∫–∞
      let recordingLink = req.body?.call?.recording_url;

      // 2Ô∏è‚É£ –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç ‚Äî fallback —á–µ—Ä–µ–∑ calls/{id}.mp3
      if (!recordingLink && callId) {
        const token = await getAccessToken();
        recordingLink = `https://api.skorozvon.ru/api/v2/calls/${callId}.mp3?access_token=${token}`;
      }

      const message = `‚úÖ –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –ö–õ–ò–ï–ù–¢

üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä: ${managerName}
üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${organizationName}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${resultName}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${callDuration} —Å–µ–∫
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}
üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å: ${recordingLink || "–ó–∞–ø–∏—Å—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"}

ID –∑–≤–æ–Ω–∫–∞: ${callId}`;

      const telegramApiUrl = `https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage`;

      console.log("üì® –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...");

      await axios.post(telegramApiUrl, {
        chat_id: TG_CHAT_ID,
        text: message,
        parse_mode: "HTML",
        reply_markup: recordingLink
          ? {
              inline_keyboard: [
                [
                  {
                    text: "üéß –ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–∞–ø–∏—Å—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞",
                    url: recordingLink,
                  },
                ],
              ],
            }
          : {},
      });

      console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
    } else {
      console.log("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º ‚Äî –Ω–µ —É—Å–ø–µ—à–Ω—ã–π –∑–≤–æ–Ω–æ–∫");
    }

    res.sendStatus(200);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±—Ö—É–∫–∞:", error.message);
    if (error.response) {
      console.error("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ Telegram API:", error.response.data);
    }
    res.sendStatus(200);
  }
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`–í–µ–±—Ö—É–∫ –¥–ª—è Skorozvon: http://localhost:${PORT}/webhook`);
  console.log(
    `–û–∂–∏–¥–∞—é –∑–≤–æ–Ω–∫–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏: ${SUCCESSFUL_RESULT_NAMES.join(", ")}`
  );
});